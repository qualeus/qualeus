static const uint8_t fs_grid_glsl[1406] =
{
	0x46, 0x53, 0x48, 0x05, 0x9a, 0x46, 0x3c, 0x63, 0x00, 0x00, 0x6f, 0x05, 0x00, 0x00, 0x69, 0x6e, // FSH..F<c..o...in
	0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x5f, 0x7a, //  vec3 v_offset_z
	0x6f, 0x6f, 0x6d, 0x30, 0x3b, 0x0a, 0x69, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x76, 0x5f, // oom0;.in vec4 v_
	0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x30, 0x3b, 0x0a, 0x76, 0x6f, // texture_res0;.vo
	0x69, 0x64, 0x20, 0x6d, 0x61, 0x69, 0x6e, 0x20, 0x28, 0x29, 0x0a, 0x7b, 0x0a, 0x20, 0x20, 0x66, // id main ().{.  f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x3b, 0x0a, 0x20, // loat tmpvar_1;. 
	0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x20, 0x3d, 0x20, 0x28, 0x61, 0x62, 0x73, //  tmpvar_1 = (abs
	0x28, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2b, 0x20, 0x76, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, // ((1.0 + v_offset
	0x5f, 0x7a, 0x6f, 0x6f, 0x6d, 0x30, 0x2e, 0x7a, 0x29, 0x29, 0x20, 0x2f, 0x20, 0x31, 0x30, 0x30, // _zoom0.z)) / 100
	0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x70, 0x6f, 0x73, 0x5f, // .0);.  vec2 pos_
	0x32, 0x3b, 0x0a, 0x20, 0x20, 0x70, 0x6f, 0x73, 0x5f, 0x32, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x28, // 2;.  pos_2 = (((
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x28, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, // .    (v_texture_
	0x72, 0x65, 0x73, 0x30, 0x2e, 0x78, 0x79, 0x20, 0x2a, 0x20, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x74, // res0.xy * v_text
	0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x30, 0x2e, 0x7a, 0x77, 0x29, 0x0a, 0x20, 0x20, 0x20, // ure_res0.zw).   
	0x2a, 0x20, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x28, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, // * .    (v_textur
	0x65, 0x5f, 0x72, 0x65, 0x73, 0x30, 0x2e, 0x77, 0x7a, 0x20, 0x2a, 0x20, 0x74, 0x6d, 0x70, 0x76, // e_res0.wz * tmpv
	0x61, 0x72, 0x5f, 0x31, 0x29, 0x0a, 0x20, 0x20, 0x29, 0x20, 0x2d, 0x20, 0x76, 0x5f, 0x6f, 0x66, // ar_1).  ) - v_of
	0x66, 0x73, 0x65, 0x74, 0x5f, 0x7a, 0x6f, 0x6f, 0x6d, 0x30, 0x2e, 0x78, 0x79, 0x29, 0x20, 0x2f, // fset_zoom0.xy) /
	0x20, 0x31, 0x30, 0x30, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, //  100.0);.  float
	0x20, 0x77, 0x5f, 0x34, 0x3b, 0x0a, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x66, 0x7a, //  w_4;.  float fz
	0x5f, 0x35, 0x3b, 0x0a, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x72, 0x6c, 0x7a, 0x5f, // _5;.  float rlz_
	0x36, 0x3b, 0x0a, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x74, 0x72, 0x61, 0x6e, 0x73, // 6;.  float trans
	0x70, 0x61, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x5f, 0x37, 0x3b, 0x0a, 0x20, 0x20, 0x74, 0x72, 0x61, // parency_7;.  tra
	0x6e, 0x73, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x5f, 0x37, 0x20, 0x3d, 0x20, 0x30, 0x2e, // nsparency_7 = 0.
	0x30, 0x3b, 0x0a, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, // 0;.  float tmpva
	0x72, 0x5f, 0x38, 0x3b, 0x0a, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x38, 0x20, // r_8;.  tmpvar_8 
	0x3d, 0x20, 0x6c, 0x6f, 0x67, 0x32, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x29, // = log2(tmpvar_1)
	0x3b, 0x0a, 0x20, 0x20, 0x72, 0x6c, 0x7a, 0x5f, 0x36, 0x20, 0x3d, 0x20, 0x66, 0x72, 0x61, 0x63, // ;.  rlz_6 = frac
	0x74, 0x28, 0x2d, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x38, 0x29, 0x29, 0x3b, 0x0a, // t(-(tmpvar_8));.
	0x20, 0x20, 0x66, 0x7a, 0x5f, 0x35, 0x20, 0x3d, 0x20, 0x65, 0x78, 0x70, 0x32, 0x28, 0x2d, 0x28, //   fz_5 = exp2(-(
	0x63, 0x65, 0x69, 0x6c, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x38, 0x29, 0x29, 0x29, // ceil(tmpvar_8)))
	0x3b, 0x0a, 0x20, 0x20, 0x77, 0x5f, 0x34, 0x20, 0x3d, 0x20, 0x28, 0x30, 0x2e, 0x30, 0x30, 0x35, // ;.  w_4 = (0.005
	0x20, 0x2a, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x29, 0x3b, 0x0a, 0x20, 0x20, //  * tmpvar_1);.  
	0x66, 0x6f, 0x72, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x64, 0x5f, 0x33, 0x20, 0x3d, // for (float d_3 =
	0x20, 0x30, 0x2e, 0x30, 0x3b, 0x20, 0x64, 0x5f, 0x33, 0x20, 0x3c, 0x3d, 0x20, 0x35, 0x2e, 0x30, //  0.0; d_3 <= 5.0
	0x3b, 0x20, 0x64, 0x5f, 0x33, 0x20, 0x2b, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x7b, 0x0a, // ; d_3 += 1.0) {.
	0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, //     float tmpvar
	0x5f, 0x39, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x28, 0x64, 0x5f, 0x33, // _9;.    if ((d_3
	0x20, 0x3d, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, //  == 0.0)) {.    
	0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x39, 0x20, 0x3d, 0x20, 0x28, 0x31, 0x2e, //   tmpvar_9 = (1.
	0x30, 0x20, 0x2d, 0x20, 0x72, 0x6c, 0x7a, 0x5f, 0x36, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // 0 - rlz_6);.    
	0x7d, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, // } else {.      f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x30, 0x3b, 0x0a, // loat tmpvar_10;.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x28, 0x64, 0x5f, 0x33, 0x20, 0x3d, //       if ((d_3 =
	0x3d, 0x20, 0x35, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // = 5.0)) {.      
	0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x30, 0x20, 0x3d, 0x20, 0x72, 0x6c, //   tmpvar_10 = rl
	0x7a, 0x5f, 0x36, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x20, 0x65, 0x6c, 0x73, // z_6;.      } els
	0x65, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, // e {.        tmpv
	0x61, 0x72, 0x5f, 0x31, 0x30, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x3b, 0x0a, 0x20, 0x20, 0x20, // ar_10 = 1.0;.   
	0x20, 0x20, 0x20, 0x7d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, //    };.      tmpv
	0x61, 0x72, 0x5f, 0x39, 0x20, 0x3d, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x30, // ar_9 = tmpvar_10
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x76, 0x65, 0x63, // ;.    };.    vec
	0x32, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x31, 0x3b, 0x0a, 0x20, 0x20, 0x20, // 2 tmpvar_11;.   
	0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x31, 0x20, 0x3d, 0x20, 0x28, 0x61, 0x62, //  tmpvar_11 = (ab
	0x73, 0x28, 0x28, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x72, 0x61, 0x63, 0x74, 0x28, // s((.      fract(
	0x28, 0x28, 0x70, 0x6f, 0x73, 0x5f, 0x32, 0x20, 0x2a, 0x20, 0x66, 0x7a, 0x5f, 0x35, 0x29, 0x20, // ((pos_2 * fz_5) 
	0x2d, 0x20, 0x30, 0x2e, 0x35, 0x29, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x2d, 0x20, 0x30, // - 0.5)).     - 0
	0x2e, 0x35, 0x29, 0x29, 0x20, 0x2f, 0x20, 0x66, 0x7a, 0x5f, 0x35, 0x29, 0x3b, 0x0a, 0x20, 0x20, // .5)) / fz_5);.  
	0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, //   float tmpvar_1
	0x32, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x32, // 2;.    tmpvar_12
	0x20, 0x3d, 0x20, 0x63, 0x6c, 0x61, 0x6d, 0x70, 0x20, 0x28, 0x28, 0x28, 0x0a, 0x20, 0x20, 0x20, //  = clamp (((.   
	0x20, 0x20, 0x20, 0x6d, 0x69, 0x6e, 0x20, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, //    min (tmpvar_1
	0x31, 0x2e, 0x78, 0x2c, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x31, 0x2e, 0x79, // 1.x, tmpvar_11.y
	0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x2d, 0x20, 0x77, 0x5f, 0x34, 0x29, 0x20, 0x2f, 0x20, // ).     - w_4) / 
	0x28, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x28, 0x77, 0x5f, 0x34, 0x20, 0x2a, 0x20, 0x30, // (.      (w_4 * 0
	0x2e, 0x32, 0x35, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x2d, 0x20, 0x77, 0x5f, 0x34, 0x29, // .25).     - w_4)
	0x29, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, // ), 0.0, 1.0);.  
	0x20, 0x20, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x5f, 0x37, //   transparency_7
	0x20, 0x3d, 0x20, 0x28, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x63, 0x79, //  = (transparency
	0x5f, 0x37, 0x20, 0x2b, 0x20, 0x28, 0x28, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x28, 0x74, // _7 + ((.      (t
	0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x32, 0x20, 0x2a, 0x20, 0x28, 0x74, 0x6d, 0x70, 0x76, // mpvar_12 * (tmpv
	0x61, 0x72, 0x5f, 0x31, 0x32, 0x20, 0x2a, 0x20, 0x28, 0x33, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x28, // ar_12 * (3.0 - (
	0x32, 0x2e, 0x30, 0x20, 0x2a, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x32, 0x29, // 2.0 * tmpvar_12)
	0x29, 0x29, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x2f, 0x20, 0x35, 0x2e, 0x30, 0x29, 0x20, // ))).     / 5.0) 
	0x2a, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x39, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, // * tmpvar_9));.  
	0x20, 0x20, 0x66, 0x7a, 0x5f, 0x35, 0x20, 0x3d, 0x20, 0x28, 0x66, 0x7a, 0x5f, 0x35, 0x20, 0x2a, //   fz_5 = (fz_5 *
	0x20, 0x32, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x7d, 0x3b, 0x0a, 0x20, 0x20, 0x76, 0x65, //  2.0);.  };.  ve
	0x63, 0x34, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x33, 0x3b, 0x0a, 0x20, 0x20, // c4 tmpvar_13;.  
	0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x33, 0x2e, 0x78, 0x20, 0x3d, 0x20, 0x74, 0x72, // tmpvar_13.x = tr
	0x61, 0x6e, 0x73, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x5f, 0x37, 0x3b, 0x0a, 0x20, 0x20, // ansparency_7;.  
	0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x33, 0x2e, 0x79, 0x20, 0x3d, 0x20, 0x74, 0x72, // tmpvar_13.y = tr
	0x61, 0x6e, 0x73, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x5f, 0x37, 0x3b, 0x0a, 0x20, 0x20, // ansparency_7;.  
	0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x33, 0x2e, 0x7a, 0x20, 0x3d, 0x20, 0x74, 0x72, // tmpvar_13.z = tr
	0x61, 0x6e, 0x73, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x5f, 0x37, 0x3b, 0x0a, 0x20, 0x20, // ansparency_7;.  
	0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x33, 0x2e, 0x77, 0x20, 0x3d, 0x20, 0x74, 0x72, // tmpvar_13.w = tr
	0x61, 0x6e, 0x73, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x5f, 0x37, 0x3b, 0x0a, 0x20, 0x20, // ansparency_7;.  
	0x67, 0x6c, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3d, 0x20, 0x74, // gl_FragColor = t
	0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x33, 0x3b, 0x0a, 0x7d, 0x0a, 0x0a, 0x00,             // mpvar_13;.}...
};
